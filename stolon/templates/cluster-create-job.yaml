apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "stolon.fullname" . }}
  labels:
    app: {{ template "stolon.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    # hook-weight is greater than db-migrate hook, so it will run afterwards
    "helm.sh/hook-weight": "0"
spec:
  template:
    metadata:
      labels:
        app: {{ template "stolon.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      restartPolicy: Never
      initContainers:
      - name: create-cluster
        image: "gcr.io/google_containers/etcd-amd64:3.0.14"
        imagePullPolicy: {{ default "Always" .Values.imagePullPolicy | quote }}
        command: ["/bin/sh", "-c", "while ! etcdctl --endpoints {{ template "store.endpoint" . }} cluster-health; do sleep 1 && echo -n .; done"]
      containers:
      - name: {{ template "stolon.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        command: ["/usr/local/bin/stolonctl"]
        args:
          - init
          - --cluster-name={{ .Values.clusterName }}
          - --store-backend={{ .Values.store.backend }}
          - --store-endpoints={{ template "store.endpoint" . }}
          - --yes
