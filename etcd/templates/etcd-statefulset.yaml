apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "etcd.fullname" . }}
  {{- template "etcd.labels" . }}
spec:
  serviceName: {{ template "etcd.fullname" . }}
  replicas: {{ default 3 .Values.replicas }}
  template:
    metadata:
      name: {{ template "etcd.fullname" . }}
      {{- include "etcd.labels" . | indent 4 }}
        fullname: {{ template "etcd.fullname" . }}
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: fullname
                  operator: In
                  values:
                  - {{ template "etcd.fullname" . }}
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ template "etcd.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.peerPort }}
          name: peer
        - containerPort: {{ .Values.clientPort }}
          name: client
        resources:
          requests:
            cpu: "{{ .Values.cpu }}"
            memory: "{{ .Values.memory }}"
        env:
        - name: INITIAL_CLUSTER_SIZE
          value: {{ default 3 .Values.replicas | quote }}
        - name: SET_NAME
          value: {{ template "etcd.fullname" . }}
        volumeMounts:
        - name: datadir
          mountPath: /var/run/etcd
        lifecycle:
          preStop:
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
{{ .Files.Get "scripts/preStop.sh" | indent 18 }}
        command:
          - "/bin/sh"
          - "-ec"
          - |
{{ .Files.Get "scripts/command.sh" | indent 12 }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          # upstream recommended max is 700M
          storage: "{{ .Values.storage }}"
    {{- if .Values.storageClass }}
    {{- if (eq "-" .Values.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.storageClass }}"
    {{- end }}
    {{- end }}
