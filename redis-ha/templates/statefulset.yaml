apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ default "rds" .Values.statefulSetName }}
  {{- include "redis-ha.labels" . | indent 2 }}
spec:
  serviceName: {{ template "redis-ha.service" . }}
  replicas: {{ default 3 .Values.replicaCount }}
  template:
    metadata:
      {{- include "redis-ha.labels" . | indent 6 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "redis-ha.app" . }}
              topologyKey: kubernetes.io/hostname
      containers:
        - name: server
          image: {{ template "redis-ha.server-image" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.server.imagePullPolicy }}
          env:
          - name: SRV_NAME
            value: {{ template "redis-ha.service" . }}
          - name: REDIS_DATA_DIR
            value: {{ default "/data" .Values.server.dataDir }}
          - name: REDIS_BIND_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP

          resources:
{{ toYaml .Values.server.resources | indent 12 }}

          ports:
            - name: redis
              containerPort: {{ default 6379 .Values.server.port }}
              protocol: "TCP"
          volumeMounts:
            - mountPath: {{ default "/data" .Values.server.dataDir }}
              name: data
            - mountPath: /etc/redis
              name: redis-config

        - name: sentinel
          image: {{ template "redis-ha.sentinel-image" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.sentinel.imagePullPolicy }}
          env:
          - name: SRV_NAME
            value: {{ template "redis-ha.service" . }}
          - name: REDIS_MASTER_NAME
            value: {{ default "ha-master" .Values.sentinel.masterName }}
          - name: SENTINEL_QUORUM
            value: {{ default 2 .Values.sentinel.quorum | quote }}
          - name: SENTINEL_BIND_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          resources:
{{ toYaml .Values.sentinel.resources | indent 12 }}

          ports:
            - name: sentinel
              containerPort: {{ default 26379 .Values.sentinel.port }}
              protocol: "TCP"
          volumeMounts:
            - mountPath: /etc/redis
              name: sentinel-config

      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
            - key: redis-dot-conf
              path: server.conf.template
      - name: sentinel-config
        configMap:
          name: sentinel-config
          items:
            - key: sentinel-dot-conf
              path: sentinel.conf.template

{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        {{- if .Values.persistence.class }}
        {{- if (eq "-" .Values.persistence.class) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.class | quote }}"
        {{- end }}
        {{- end }}
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
{{- else }}
      - name: data
        emptyDir: {}
{{- end }}
